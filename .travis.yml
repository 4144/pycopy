sudo: required
dist: trusty
language: c
compiler:
  - gcc
cache:
  directories:
    - "${HOME}/persist"

before_script:
# Extra CPython versions
#  - sudo add-apt-repository -y ppa:fkrull/deadsnakes
# Extra gcc versions
#  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo add-apt-repository -y ppa:terry.guo/gcc-arm-embedded
  - sudo dpkg --add-architecture i386
  - sudo apt-get update -qq || true
  - sudo apt-get install -y python3 gcc-multilib pkg-config libffi-dev libffi-dev:i386 qemu-system gcc-mingw-w64
  - sudo apt-get install -y --force-yes gcc-arm-none-eabi
  # For teensy build
  - sudo apt-get install realpath
  # For coverage testing
  - sudo pip install cpp-coveralls
  - gcc --version
  - arm-none-eabi-gcc --version
  - python3 --version

script:
  - make -C mpy-cross
  - make -C minimal CROSS=1 build/firmware.bin
  - ls -l minimal/build/firmware.bin
  - tools/check_code_size.sh
  - mkdir -p ${HOME}/persist
  # Save new firmware for reference, but only if building a main branch, not a pull request
  - '[ "$TRAVIS_PULL_REQUEST" = "false" ] && cp minimal/build/firmware.bin ${HOME}/persist/'

after_success:
  - (cd unix && coveralls --root .. --build-root . --gcov $(which gcov) --gcov-options '\-o build-coverage/' --include py --include extmod)

after_failure:
  - (cd tests && for exp in *.exp; do testbase=$(basename $exp .exp); echo -e "\nFAILURE $testbase"; diff -u $testbase.exp $testbase.out; done)
  - (grep "FAIL" qemu-arm/build/console.out)
